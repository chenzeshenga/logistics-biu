<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.abc.chenzeshenga.logistics.mapper.ReturnMapper">
    <cache eviction="FIFO" flushInterval="600000" size="512"/>

    <resultMap id="result" type="com.abc.chenzeshenga.logistics.model.Return">
        <id column="return_no" property="returnNo"/>
        <result column="without_order_no_flag" property="withoutOrderNoFlag"/>
        <result column="order_no" property="orderNo"/>
        <result column="to_name" property="toName"/>
        <result column="to_contact" property="toContact"/>
        <result column="to_zip_code" property="toZipCode"/>
        <result column="to_detail_address" property="toDetailAddress"/>
        <result column="to_ken_id" property="toKenId"/>
        <result column="to_city_id" property="toCityId"/>
        <result column="to_town_id" property="toTownId"/>
        <result column="from_name" property="fromName"/>
        <result column="from_contact" property="fromContact"/>
        <result column="from_zip_code" property="fromZipCode"/>
        <result column="from_detail_address" property="fromDetailAddress"/>
        <result column="from_ken_id" property="fromKenId"/>
        <result column="from_city_id" property="fromCityId"/>
        <result column="from_town_id" property="fromTownId"/>
        <result column="carrier" property="carrier"/>
        <result column="track_no" property="trackNo"/>
        <result column="imgs" property="imgs"/>
        <result column="status" property="status"/>
        <result column="create_by" property="creator"/>
        <result column="create_on" jdbcType="TIMESTAMP" property="createOn"/>
        <result column="update_by" property="updator"/>
        <result column="update_on" jdbcType="TIMESTAMP" property="updateOn"/>
        <collection property="contentList" ofType="com.abc.chenzeshenga.logistics.model.ReturnContent">
            <result column="subReturnNo" property="returnNo"/>
            <result column="sku" property="sku"/>
            <result column="box_seq" property="name"/>
            <result column="total_num" property="num"/>
            <result column="deal_with" property="dealWith"/>
        </collection>
    </resultMap>

    <select id="getReturnSeq" resultMap="result">
        select *
        from l_returning
        order by create_on desc
        limit 1
    </select>

    <select id="selectByPk" resultMap="result">
        select *
        from l_returning
        where return_no = #{returnNo}
    </select>

    <update id="updateByPk" parameterType="com.abc.chenzeshenga.logistics.model.Return">
        update l_returning
        set without_order_no_flag = #{withoutOrderNoFlag},
            order_no              = #{orderNo},
            to_name               = #{toName},
            to_contact            = #{toContact},
            to_zip_code           = #{toZipCode},
            to_detail_address     = #{toDetailAddress},
            to_ken_id             = #{toKenId},
            to_city_id            = #{toCityId},
            to_town_id            = #{toTownId},
            from_name             = #{fromName},
            from_contact          = #{fromContact},
            from_zip_code         = #{fromZipCode},
            from_detail_address   = #{fromDetailAddress},
            from_ken_id           = #{fromKenId},
            from_city_id          = #{fromCityId},
            from_town_id          = #{fromTownId},
            carrier               = #{carrier},
            track_no              = #{trackNo},
            imgs                  = #{imgs},
            status                = #{status},
            create_by             = #{creator},
            update_by             = #{updator},
            create_on             = #{createOn,jdbcType=TIMESTAMP},
            update_on             = #{updateOn,jdbcType=TIMESTAMP}
        where return_no = #{returnNo}
    </update>

    <insert id="insertReturnOrder" parameterType="com.abc.chenzeshenga.logistics.model.Return">
        insert into l_returning (return_no, without_order_no_flag, to_name, to_contact, to_zip_code, to_detail_address,
                                 to_ken_id, to_city_id, to_town_id, from_name, from_contact, from_zip_code,
                                 from_detail_address, from_ken_id, from_city_id, from_town_id, carrier, track_no, imgs,
                                 status, create_on, update_on, create_by, update_by, order_no)
        values (#{returnNo}, #{withoutOrderNoFlag}, #{toName}, #{toContact}, #{toZipCode}, #{toDetailAddress},
                #{toKenId}, #{toCityId}, #{toTownId}, #{fromName}, #{fromContact}, #{fromZipCode},
                #{fromDetailAddress}, #{fromKenId}, #{fromCityId}, #{fromTownId}, #{carrier}, #{trackNo}, #{imgs},
                #{status}, #{createOn,jdbcType=TIMESTAMP}, #{updateOn,jdbcType=TIMESTAMP}, #{creator}, #{updator},
                #{orderNo})
        on duplicate key update without_order_no_flag=#{withoutOrderNoFlag},
                                to_name= #{toName},
                                to_contact=#{toContact},
                                to_zip_code=#{toZipCode},
                                to_detail_address= #{toDetailAddress},
                                to_ken_id=#{toKenId},
                                to_city_id=#{toCityId},
                                to_town_id=#{toTownId},
                                from_name=#{fromName},
                                from_contact= #{fromContact},
                                from_zip_code=#{fromZipCode},
                                from_detail_address=#{fromDetailAddress},
                                from_ken_id=#{fromKenId},
                                from_city_id=#{fromCityId},
                                from_town_id=#{fromTownId},
                                carrier= #{carrier},
                                track_no=#{trackNo},
                                imgs= #{imgs},
                                status= #{status},
                                create_on=#{createOn,jdbcType=TIMESTAMP},
                                update_on=#{updateOn,jdbcType=TIMESTAMP},
                                create_by= #{creator},
                                update_by= #{updator},
                                order_no= #{orderNo}
    </insert>

    <insert id="insertContent" parameterType="java.util.List">
        insert into l_returning_content(return_no, sku, name, deal_with, num)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.returnNo}, #{item.sku}, #{item.name}, #{item.dealWith}, #{item.num})
        </foreach>
    </insert>

    <delete id="deleteContent" parameterType="java.lang.String">
        delete
        from l_returning_content
        where return_no = #{returnNo}
    </delete>

    <select id="list" resultMap="result">
        select returning.*, content.return_no as subReturnNo, content.sku, content.name, content.deal_with, content.num
        from l_returning returning
                 left join l_returning_content content on returning.return_no = content.return_no
        where status = #{status}
          and create_by = ''
          and create_on between #{from} and #{to}
    </select>

    <select id="listAll" resultMap="result">
        select returning.*, content.return_no as subReturnNo, content.sku, content.name, content.deal_with, content.num
        from l_returning returning
                 left join l_returning_content content on returning.return_no = content.return_no
        where status = #{status}
          and create_on between #{from} and #{to}
    </select>

</mapper>
