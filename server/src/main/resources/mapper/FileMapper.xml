<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.abc.chenzeshenga.logistics.mapper.FileMapper">
    <resultMap id="BaseResultMap" type="com.abc.chenzeshenga.logistics.model.File">
        <id column="uuid" jdbcType="VARCHAR" property="uuid"/>
        <result column="file_name" jdbcType="VARCHAR" property="fileName"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.abc.chenzeshenga.logistics.model.File">
        <result column="userFile" jdbcType="LONGVARBINARY" property="userFile"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs2" type="com.abc.chenzeshenga.logistics.model.File">
        <id column="uuid" jdbcType="VARCHAR" property="uuid"/>
        <result column="userFile" jdbcType="LONGVARBINARY" property="userFile"/>
        <result column="fileName" jdbcType="VARCHAR" property="fileName"/>
    </resultMap>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
        select file.uuid,
               file.file as userFile,
               template.file_name
        from l_file file
                 left join l_template template on (file.uuid = template.uuid)
        where file.uuid = #{uuid,jdbcType=VARCHAR}
    </select>

    <select id="selectByPrimaryKeyWithName" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs2">
        select file.uuid,
               `file` as userFile,
               name   as fileName
        from l_file file
        where file.uuid = #{uuid,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from l_file
        where uuid = #{uuid,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.abc.chenzeshenga.logistics.model.File">
        insert into l_file (uuid, file)
        values (#{uuid,jdbcType=VARCHAR}, #{userFile,jdbcType=LONGVARBINARY})
    </insert>
    <insert id="insertWithName" parameterType="com.abc.chenzeshenga.logistics.model.File">
        insert into l_file (uuid, file, name)
        values (#{uuid,jdbcType=VARCHAR}, #{file,jdbcType=LONGVARBINARY}, #{fileName,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.abc.chenzeshenga.logistics.model.File">
        insert into l_file
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uuid != null">
                uuid,
            </if>
            <if test="file != null">
                userFile,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uuid != null">
                #{uuid,jdbcType=VARCHAR},
            </if>
            <if test="file != null">
                #{file,jdbcType=LONGVARBINARY},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.abc.chenzeshenga.logistics.model.File">
        update l_file
        <set>
            <if test="file != null">
                `file` = #{file,jdbcType=LONGVARBINARY},
            </if>
        </set>
        where uuid = #{uuid,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.abc.chenzeshenga.logistics.model.File">
        update l_file
        set file = #{file,jdbcType=LONGVARBINARY}
        where uuid = #{uuid,jdbcType=VARCHAR}
    </update>
</mapper>
